---
- name: Restore OpenStack Cinder Volume from Backup
  hosts: localhost
  gather_facts: false

  collections:
    - openstack.cloud

  tasks:
    - name: Check if backup exists
      openstack.cloud.volume_backup_info:
        name: "{{ backup_id }}"
      register: backup_info
      delegate_to: localhost

    - name: Debug environment variables
      ansible.builtin.debug:
        msg:
          - "OS_AUTH_URL: {{ lookup('env', 'OS_AUTH_URL') }}"
          - "OS_USERNAME: {{ lookup('env', 'OS_USERNAME') }}"
          - "OS_PROJECT_NAME: {{ lookup('env', 'OS_PROJECT_NAME') }}"
          - "OS_DOMAIN_NAME: {{ lookup('env', 'OS_DOMAIN_NAME') }}"
          - "OS_REGION_NAME: {{ lookup('env', 'OS_REGION_NAME') }}"

    - name: Restore volume from backup using OpenStack CLI
      ansible.builtin.shell: |
        export OS_USER_DOMAIN_NAME="${OS_DOMAIN_NAME:-default}"
        export OS_PROJECT_DOMAIN_NAME="${OS_DOMAIN_NAME:-default}"
        export OS_IDENTITY_API_VERSION=3
        openstack volume backup restore {{ backup_id }} {{ volume_id }}
      register: restore_result
      delegate_to: localhost

    - name: Display restore result
      ansible.builtin.debug:
        msg: "Restore initiated: {{ restore_result.stdout }}"

    - name: Wait for volume to become available
      openstack.cloud.volume_info:
        name: "{{ volume_id }}"
      register: volume_status
      until: volume_status.volumes[0].status == 'available'
      retries: 30
      delay: 10
      delegate_to: localhost
      when: restore_result is succeeded